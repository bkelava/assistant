from typing import Dict

import constants.part_time_contract as PTC
import constants.full_time_contract as FTC

from constants.part_time_contract_pdf import *
from constants.specials import EMPTY_STRING, DASH, DOT, COLON
from .pdf_base import PDF
from .pdf_constants import *
from .pdf_helper import create_line


class PDFGenerator:
    @staticmethod
    def generate_part_time_contract(data: Dict) -> None:
        pdf: PDF = PDF()
        pdf.alias_nb_pages()
        pdf.add_page()

        pdf.add_font(NOTO_SANS, "", NOTO_SANS_REGULAR_PATH, uni=True)
        pdf.add_font(NOTO_SANS, BOLD, NOTO_SANS_BOLD_PATH, uni=True)
        pdf.add_font(NOTO_SANS, ITALIC, NOTO_SANS_ITALIC_PATH, uni=True)

        pdf.image(LOGO, 10, 0, 22)
        pdf.set_font(NOTO_SANS, BOLD, 5)
        pdf.ln(12)
        pdf.cell(w=69, h=0, txt=HEADER_MARK, border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln(12)

        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{PTC.label_1} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[EMPLOYERS]}, {data[EMPLOYER_INFO]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f", {PTC.label_2}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f" {data[DIRECTOR]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f", {PTC.label_3} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[EMPLOYEES]}, {PERSONAL_ID_TYPES} {data[EMPLOYEE_PERSONAL_ID]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_4} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_DATE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_5}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{PTC.label_6}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.cell(w=0, h=0, txt=f"{PTC.label_7}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_8}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_9} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[END_JOB_DATE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_10}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{data[JOB_DESCRIPTION]}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{PTC.label_11} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[TRAIL_NUMBERS]} {data[TRAIL_OPTION]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_13} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WORKING_PLACE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{PTC.label_14}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_15}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_16} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[START_DATE] == EMPTY_STRING and data[START_DATE_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[START_DATE_DESCRIPTION]}")
        elif data[START_DATE] != EMPTY_STRING and data[START_DATE_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[START_DATE]}")
        else:
            pdf.write(h=0, txt=f"{data[START_DATE]} {data[START_DATE_DESCRIPTION]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{PTC.label_17}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_18}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_19} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_20}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_22}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_23} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_BONUS]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_24}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_25}")
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_26} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_1]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_27} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_2]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_28} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_3]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_29} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_4]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_30} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_5]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_31} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_6]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_32}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_33}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_34}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_35} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WORK_TYPE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_36} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WEEKLY_WORKING_HOURS]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_37}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_38} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WORKING_SHIFT]}")
        if data[WORKING_SHIFT_DESCRIPTION] == EMPTY_STRING:
            pdf.set_font(NOTO_SANS, "", 12)
            pdf.write(h=0, txt=f"{PTC.label_39} ")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[WORKING_TIME_START]} {DASH} {data[WORKING_TIME_END]}{DOT}")
        else:
            pdf.write(h=0, txt=f"{COLON} {data[WORKING_SHIFT_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_40}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_41} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WEEKLY_TIME_OFF]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_42} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[VACATION]} {data[VACATION_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_43}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        label_44 = PTC.label_44.replace("\n", " ")
        pdf.write(h=0, txt=f"{label_44}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_46}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_47} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_TERMINATION]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_48}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_49} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_TERMINATION_EMPLOYER]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_50} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_TERMINATION_EMPLOYEE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {PTC.label_51}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_52}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[RIGHTS_AND_OBLIGATIONS]}{DOT}", align=ALIGN_CENTER)
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_53}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_54} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[COURT]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_55} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[CONTRACT_STARTING_WITH] == EMPTY_STRING and data[CONTRACT_START_WITH_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[CONTRACT_START_WITH_DESCRIPTION]}")
        elif data[CONTRACT_STARTING_WITH] != EMPTY_STRING and data[CONTRACT_START_WITH_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[CONTRACT_STARTING_WITH]}")
        else:
            pdf.write(h=0, txt=f"{data[CONTRACT_STARTING_WITH]} {data[CONTRACT_START_WITH_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_56}")
        pdf.ln(30)
        employer: str = f"{EMPLOYER}{COLON} {data[DIRECTOR]}"
        employee: str = f"{EMPLOYEE}{COLON} {data[EMPLOYEES]}"
        pdf.cell(w=0, h=0, txt=employer, align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=employee, align=ALIGN_RIGHT)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employer))}", align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employee))}", align=ALIGN_RIGHT)

        pdf.output(f"{data[EMPLOYERS].upper()}{DASH}{data[EMPLOYEES].upper()}{PDF_EXTENSION}")

    @staticmethod
    def generate_full_time_contract(data: Dict) -> None:
        pdf: PDF = PDF()
        pdf.alias_nb_pages()
        pdf.add_page()

        pdf.add_font(NOTO_SANS, "", NOTO_SANS_REGULAR_PATH, uni=True)
        pdf.add_font(NOTO_SANS, BOLD, NOTO_SANS_BOLD_PATH, uni=True)
        pdf.add_font(NOTO_SANS, ITALIC, NOTO_SANS_ITALIC_PATH, uni=True)

        pdf.image(LOGO, 10, 0, 22)
        pdf.set_font(NOTO_SANS, BOLD, 5)
        pdf.ln(12)
        pdf.cell(w=69, h=0, txt=HEADER_MARK, border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln(12)

        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{FTC.label_1} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[EMPLOYERS]}, {data[EMPLOYER_INFO]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f", {FTC.label_2}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f" {data[DIRECTOR]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f", {FTC.label_3} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[EMPLOYEES]}, {PERSONAL_ID_TYPES} {data[EMPLOYEE_PERSONAL_ID]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_4} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_DATE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_5}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{FTC.label_6}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.cell(w=0, h=0, txt=f"{FTC.label_7}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_8}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_9} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{data[JOB_DESCRIPTION]}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{FTC.label_10} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[TRAIL_NUMBERS]} {data[TRAIL_OPTION]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_11} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WORKING_PLACE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f"{FTC.label_12}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_13}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_14} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[START_DATE] == EMPTY_STRING and data[START_DATE_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[START_DATE_DESCRIPTION]}")
        elif data[START_DATE] != EMPTY_STRING and data[START_DATE_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[START_DATE]}")
        else:
            pdf.write(h=0, txt=f"{data[START_DATE]} {data[START_DATE_DESCRIPTION]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_15}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_16} ", align=ALIGN_CENTER)
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_17}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_18}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_19} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_BONUS]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_20}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_21}")
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_22} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_1]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_23} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_2]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_24} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_3]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_25} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_4]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_26} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_5]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_27} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[SALARY_INCREMENT_6]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_28}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_29}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_30}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_31} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WORK_TYPE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_32} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WEEKLY_WORKING_HOURS]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_33}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_34} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WORKING_SHIFT]}")
        if data[WORKING_SHIFT_DESCRIPTION] == EMPTY_STRING:
            pdf.set_font(NOTO_SANS, "", 12)
            pdf.write(h=0, txt=f"{FTC.label_35} ")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[WORKING_TIME_START]} {DASH} {data[WORKING_TIME_END]}{DOT}")
        else:
            pdf.write(h=0, txt=f"{COLON} {data[WORKING_SHIFT_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_36}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_37} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[WEEKLY_TIME_OFF]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_38} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[VACATION]} {data[VACATION_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_39}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        label_40 = PTC.label_40.replace("\n", " ")
        pdf.write(h=0, txt=f"{label_40}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_41}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_42} ")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_43} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_TERMINATION_EMPLOYER]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_44} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[CONTRACT_TERMINATION_EMPLOYEE]}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.write(h=0, txt=f" {FTC.label_45}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_46}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[RIGHTS_AND_OBLIGATIONS]}{DOT}", align=ALIGN_CENTER)
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_47}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_48} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[COURT]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_49} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[CONTRACT_STARTING_WITH] == EMPTY_STRING and data[CONTRACT_START_WITH_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[CONTRACT_START_WITH_DESCRIPTION]}")
        elif data[CONTRACT_STARTING_WITH] != EMPTY_STRING and data[CONTRACT_START_WITH_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[CONTRACT_STARTING_WITH]}")
        else:
            pdf.write(h=0, txt=f"{data[CONTRACT_STARTING_WITH]} {data[CONTRACT_START_WITH_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, "", 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_50}")
        pdf.ln(30)
        employer: str = f"{EMPLOYER}{COLON} {data[DIRECTOR]}"
        employee: str = f"{EMPLOYEE}{COLON} {data[EMPLOYEES]}"
        pdf.cell(w=0, h=0, txt=employer, align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=employee, align=ALIGN_RIGHT)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employer))}", align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employee))}", align=ALIGN_RIGHT)

        pdf.output(f"{data[EMPLOYERS].upper()}{DASH}{data[EMPLOYEES].upper()}{PDF_EXTENSION}")
