import calendar
import locale

from typing import Dict
from varname import nameof

import src.constants.contract_anex_a1 as A1
import src.constants.contract_anex_a1_pdf as A1P
import src.constants.contract_pdf as C
import src.constants.excel as Excel
import src.constants.full_time_contract as FTC
import src.constants.gfi_reports_pdf as GFI
import src.constants.part_time_contract as PTC
import src.constants.working_hours_sheet_pdf as Sheet


from src.constants.specials import EMPTY_STRING, DASH, DOT, COLON, COMMA, DOWN_DASH, LOCALE_CROATIA, SPACE
from src.database import DatabaseHandler
from src.tables import Employer, Employee
from src.utils import (
    create_date,
    create_line,
    get_nkd_from_nkd_number,
    parse_personal_id_from_string,
    remove_unnecesary_dates_from_calendar,
    replace_character,
)

from .pdf_base import PDFContractAnexA1, PDFPartTimeContract, PDFFullTimeContract, PDFWorkingHoursSheet, PDFGFiReport
from .pdf_constants import *


class PDFGenerator:
    @staticmethod
    def generate_GFI_report_3(data: Dict) -> None:
        pdf: PDFGFiReport = PDFGFiReport(orientation=PORTRAIT, format=A4)
        pdf.alias_nb_pages()
        pdf.add_page()
        pdf.set_margin(11)
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_1}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COMPANY_NAME]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_2}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.CITY]}{COMMA} {data[Excel.ADDRESS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_3}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_4}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_3_PART_5}", align=ALIGN_CENTER)
        pdf.ln()

        company_check_name: str = str(data[Excel.COMPANY_NAME]).replace(" ", "").lower()
        if data[Excel.LOSS_COVERAGE] != "":
            print("GUBITAK")
            pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_3_PART_7}", align=ALIGN_CENTER)
            pdf.ln()
            pdf.ln()
            pdf.ln()
            pdf.ln()
            pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_1_LOSS}")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[Excel.REPORT_DATE]}")
            pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
            pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_2_LOSS}")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT}")
            pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
            pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_3_LOSS}")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[Excel.LOSS]}")
            pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
            pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_4_LOSS}")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[Excel.LOSS_COVERAGE]}{DOT}")
        else:
            print("DOBITAK")
            pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_3_PART_6}", align=ALIGN_CENTER)
            pdf.ln()
            pdf.ln()
            pdf.ln()
            pdf.ln()
            if JDOO in company_check_name.tolower():
                print("JDOO)")
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_1_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_2_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.GAIN_BEFORE_TAX]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_3_JDOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_4_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.GAIN_TAX]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_5_JDOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_6_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.GAIN_AFTER_TAX]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_7_JDOO}")
                pdf.ln()
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_8_JDOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_9_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.SAVINGS]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_10_JDOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_11_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.PAYOUT]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_12_JDOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_13_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.TOTAL_GAIN]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_14_JDOO}")
                pdf.ln()
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_15_JDOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.KEPT_FOR_LOSS_COVERAGE]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_14_JDOO}")
            else:
                print("DOO")
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_1_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_2_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.GAIN_BEFORE_TAX]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_3_DOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_4_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.GAIN_TAX]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_5_DOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_6_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.GAIN_AFTER_TAX]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_7_DOO}")
                pdf.ln()
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_8_JDOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_9_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.PAYOUT]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_10_DOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_11_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.TOTAL_GAIN]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_12_DOO}")
                pdf.ln()
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_13_DOO}")
                pdf.set_font(NOTO_SANS, BOLD, 12)
                pdf.write(h=0, txt=f"{data[Excel.KEPT_FOR_LOSS_COVERAGE]}")
                pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
                pdf.write(h=0, txt=f"{GFI.REPORT_3_PART_10_DOO}")
        pdf.ln(40)
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_3_PART_8}", align=ALIGN_CENTER)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(GFI.REPORT_3_PART_8))}", align=ALIGN_CENTER)
        pdf.ln(5)
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[Excel.DIRECTOR]}", align=ALIGN_CENTER)

        output: str = f"{REPORT_3}{data[Excel.COMPANY_NAME]}{PDF_EXTENSION}"
        pdf.output(output)

    @staticmethod
    def generate_GFI_report_2(data: Dict) -> None:
        pdf: PDFGFiReport = PDFGFiReport(orientation=PORTRAIT, format=A4)
        pdf.alias_nb_pages()
        pdf.add_page()
        pdf.set_margin(11)
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COMPANY_NAME]}")
        pdf.ln()
        pdf.write(h=0, txt=f"{data[Excel.ADDRESS]}, {data[Excel.CITY]}")
        pdf.ln()
        pdf.write(h=0, txt=f"{VAT}{COLON} {data[Excel.OIB]}")
        pdf.ln()
        pdf.write(h=0, txt=f"{MBS}{COLON} {data[Excel.MBS]}")
        pdf.ln()
        pdf.write(h=0, txt=f"{MB}{COLON} {data[Excel.MB]}")
        pdf.ln(20)
        pdf.cell(
            w=0,
            h=0,
            txt=f"{GFI.REPORT_2_PART_1}{data[Excel.REPORT_YEAR]}{DOT}{GFI.REPORT_2_PART_2}",
            align=ALIGN_CENTER,
        )
        pdf.ln(20)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_3}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_4}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COMPANY_NAME]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_5}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.ADDRESS]} {data[Excel.CITY]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_6}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.TOWNSHIP]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_7}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COUTY]}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_8}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.DIRECTOR]}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_9}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.MB]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_10}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.MBS]}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_11}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.OWNERSHIP]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_12}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COMPANY_SIZE]}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_13}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.DOMESTIC]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_14}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.FOREIGN]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_15}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_16}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{get_nkd_from_nkd_number(data[Excel.NKD])}{DOT}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_17}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.AUTONOMY][:-1]}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_19}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.EMPLOYEES_PREVIOUS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_20}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_21}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.EMPLOYEES_CURRENT]} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_22} {GFI.REPORT_2_PART_23}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{str(int(float(data[Excel.REPORT_YEAR]))-1)}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_24}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{str(int(float(data[Excel.OPERATE_PREVIOUS])))}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_25}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_26}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{str(int(float(data[Excel.OPERATE_CURRENT])))}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_27}")
        pdf.ln()
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_28}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_29}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_30}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_31}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_32}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_33} {GFI.REPORT_2_PART_34} {GFI.REPORT_2_PART_35}")
        pdf.ln()
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_36}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_36_HALF}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_37} {GFI.REPORT_2_PART_38} {GFI.REPORT_2_PART_39}")

        pdf.add_page()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_40}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(
            h=0, txt=f"{GFI.REPORT_2_PART_41} {GFI.REPORT_2_PART_42} {GFI.REPORT_2_PART_43} {GFI.REPORT_2_PART_44}"
        )
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_45}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_46}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_47}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_48} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_49}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_50}{data[Excel.INCOME_SALES]}{GFI.REPORT_2_PART_51}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_52}{data[Excel.INCOME_GOODS_AND_SERVICES]}{GFI.REPORT_2_PART_53}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_54}{data[Excel.INCOME_REST]}{GFI.REPORT_2_PART_55}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_56}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_57} {GFI.REPORT_2_PART_58}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_59}{DOT} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_60}")
        pdf.ln()
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_61}{data[Excel.INCOME_CURSE]}{GFI.REPORT_2_PART_62}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_63}{data[Excel.INCOME_INTEREST]}{GFI.REPORT_2_PART_64}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_65}{data[Excel.INCOME_STOCK]}{GFI.REPORT_2_PART_66}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_67}{data[Excel.INCOME_LOAN]}{GFI.REPORT_2_PART_68}")
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_69}{data[Excel.INCOME_FINANCIAL_REST]}{GFI.REPORT_2_PART_70}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_71}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_72}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COMPANY_NAME]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_73}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_74}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.EXPENSES_CURRENT]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_75}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.EXPENSES_PREVIOUS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_76}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if int(float(data[Excel.EXPENSES_DIFF_PERCT].replace(COMMA, DOT))) > 0:
            pdf.write(h=0, txt=f"+{data[Excel.EXPENSES_DIFF_PERCT]}%")
        else:
            pdf.write(h=0, txt=f"{data[Excel.EXPENSES_DIFF_PERCT]}%")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_77}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.EXPENSES_DIFF]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_2_PART_78}")
        pdf.ln(35)
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_2_PART_79}", align=ALIGN_CENTER)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(GFI.REPORT_2_PART_79))}", align=ALIGN_CENTER)
        pdf.ln(5)
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[Excel.DIRECTOR]}", align=ALIGN_CENTER)

        output: str = f"{REPORT_2}{data[Excel.COMPANY_NAME]}{PDF_EXTENSION}"
        pdf.output(output)

    @staticmethod
    def generate_GFI_report_1(data: Dict) -> None:
        pdf: PDFGFiReport = PDFGFiReport(orientation=PORTRAIT, format=A4)
        pdf.alias_nb_pages()
        pdf.add_page()
        pdf.set_margin(11)
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_1}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.COMPANY_NAME]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_2}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(
            h=0,
            txt=f"{data[Excel.CITY]}{COMMA}{SPACE}{data[Excel.ADDRESS]}{COMMA}{SPACE}{VAT}{COLON}{SPACE}{data[Excel.OIB]}",
        )
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_3}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_4}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_1_PART_5}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.cell(
            w=0, h=0, txt=f"{GFI.REPORT_1_PART_6} {data[Excel.REPORT_YEAR]} {GFI.REPORT_1_PART_7}", align=ALIGN_CENTER
        )
        pdf.ln()
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_1_PART_8}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_9}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_10}")
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES} {GFI.REPORT_1_PART_11}")
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES} {GFI.REPORT_1_PART_12}")
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES} {GFI.REPORT_1_PART_13}")
        pdf.ln()
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_1_PART_14}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_15}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_YEAR]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_16}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"+{data[Excel.GAIN]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_17} {GFI.REPORT_1_PART_18}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"-{data[Excel.LOSS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_19}")
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_20}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.REPORT_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_21}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[Excel.BALANCE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{GFI.REPORT_1_PART_22}")
        pdf.ln(40)
        pdf.cell(w=0, h=0, txt=f"{GFI.REPORT_1_PART_23}", align=ALIGN_CENTER)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(GFI.REPORT_1_PART_23))}", align=ALIGN_CENTER)
        pdf.ln(5)
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[Excel.DIRECTOR]}", align=ALIGN_CENTER)

        output: str = f"{REPORT_1}{data[Excel.COMPANY_NAME]}{PDF_EXTENSION}"
        pdf.output(output)

    @staticmethod
    def generate_part_time_contract(data: Dict) -> None:
        pdf: PDFPartTimeContract = PDFPartTimeContract(orientation=PORTRAIT, format=A4)
        pdf.alias_nb_pages()
        pdf.add_page()

        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{PTC.label_1} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.EMPLOYERS]}, {data[C.EMPLOYER_INFO]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f", {PTC.label_2}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f" {data[C.DIRECTOR]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f", {PTC.label_3} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.EMPLOYEES]}, {PERSONAL_ID_TYPES} {data[C.EMPLOYEE_PERSONAL_ID]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_4} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_5}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{PTC.label_6}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.cell(w=0, h=0, txt=f"{PTC.label_7}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_8}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_9} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[C.END_JOB_DATE] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.END_JOB_DESCRIPTION]}")
        elif data[C.END_JOB_DATE] != EMPTY_STRING and data[C.END_JOB_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.END_JOB_DATE]} {DASH} {data[C.END_JOB_DESCRIPTION]}")
        else:
            pdf.write(h=0, txt=f"{data[C.END_JOB_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_10}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{data[C.JOB_DESCRIPTION]}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{PTC.label_11} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.TRAIL_NUMBERS]} {data[C.TRAIL_OPTION]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_12} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WORKING_PLACE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{PTC.label_13}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_14}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_15} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[C.START_DATE] == EMPTY_STRING and data[C.START_DATE_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.START_DATE_DESCRIPTION]}")
        elif data[C.START_DATE] != EMPTY_STRING and data[C.START_DATE_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.START_DATE]}")
        else:
            pdf.write(h=0, txt=f"{data[C.START_DATE]} {data[C.START_DATE_DESCRIPTION]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{DOT}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_16}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_17} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_18}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_19}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_20} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_BONUS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_21}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_22}")
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_23} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_1]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_24} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_2]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_25} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_3]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_26} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_4]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_27} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_5]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{PTC.label_28} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_6]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_29}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_30}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_31}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_32} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WORK_TYPE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_33} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WEEKLY_WORKING_HOURS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_34}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_35} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WORKING_SHIFT]}")
        if data[C.WORKING_SHIFT_DESCRIPTION] == EMPTY_STRING:
            pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
            pdf.write(h=0, txt=f"{PTC.label_36} ")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[C.WORKING_TIME_START]} {DASH} {data[C.WORKING_TIME_END]}{DOT}")
        else:
            pdf.write(h=0, txt=f"{COLON} {data[C.WORKING_SHIFT_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_37}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_38} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WEEKLY_TIME_OFF]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_39} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.VACATION]} {data[C.VACATION_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_40}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        label_41 = PTC.label_41.replace("\n", " ")
        pdf.write(h=0, txt=f"{label_41}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_42}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_43} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_TERMINATION]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_44}")
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_45} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_TERMINATION_EMPLOYER]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_46} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_TERMINATION_EMPLOYEE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {PTC.label_47}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_48}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[C.RIGHTS_AND_OBLIGATIONS]}{DOT}", align=ALIGN_CENTER)
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{PTC.label_49}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_50} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.COURT]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_51} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[C.CONTRACT_STARTING_WITH] == EMPTY_STRING and data[C.CONTRACT_START_WITH_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.CONTRACT_START_WITH_DESCRIPTION]}{DOT}")
        elif data[C.CONTRACT_STARTING_WITH] != EMPTY_STRING and data[C.CONTRACT_START_WITH_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.CONTRACT_STARTING_WITH]}")
        else:
            pdf.write(h=0, txt=f"{data[C.CONTRACT_STARTING_WITH]} {data[C.CONTRACT_START_WITH_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{PTC.label_52}")
        pdf.ln(30)
        employer: str = f"{EMPLOYER}{COLON} {data[C.DIRECTOR]}"
        employee: str = f"{EMPLOYEE}{COLON} {data[C.EMPLOYEES]}"
        pdf.cell(w=0, h=0, txt=employer, align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=employee, align=ALIGN_RIGHT)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employer))}", align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employee))}", align=ALIGN_RIGHT)

        output: str = replace_character(
            f"{nameof(PTC)}{DOWN_DASH}{data[C.EMPLOYERS].upper()}{DOWN_DASH}{data[C.EMPLOYEES].upper()}{PDF_EXTENSION}"
        )
        pdf.output(output)

    @staticmethod
    def generate_full_time_contract(data: Dict) -> None:
        pdf: PDFFullTimeContract = PDFFullTimeContract(orientation=PORTRAIT, format=A4)
        pdf.alias_nb_pages()
        pdf.add_page()

        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{FTC.label_1} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.EMPLOYERS]}, {data[C.EMPLOYER_INFO]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f", {FTC.label_2}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f" {data[C.DIRECTOR]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f", {FTC.label_3} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.EMPLOYEES]}, {PERSONAL_ID_TYPES} {data[C.EMPLOYEE_PERSONAL_ID]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_4} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_5}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{FTC.label_6}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.cell(w=0, h=0, txt=f"{FTC.label_7}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_8}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_9} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{data[C.JOB_DESCRIPTION]}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{FTC.label_10} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.TRAIL_NUMBERS]} {data[C.TRAIL_OPTION]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_11} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WORKING_PLACE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{FTC.label_12}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_13}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_14} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[C.START_DATE] == EMPTY_STRING and data[C.START_DATE_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.START_DATE_DESCRIPTION]}")
        elif data[C.START_DATE] != EMPTY_STRING and data[C.START_DATE_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.START_DATE]}")
        else:
            pdf.write(h=0, txt=f"{data[C.START_DATE]} {data[C.START_DATE_DESCRIPTION]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_15}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_16} ", align=ALIGN_CENTER)
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_17}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_18}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_19} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_BONUS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_20}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_21}")
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_22} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_1]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_23} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_2]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_24} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_3]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_25} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_4]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_26} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_5]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{TEN_SPACES}{FTC.label_27} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.SALARY_INCREMENT_6]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_28}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_29}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_30}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_31} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WORK_TYPE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_32} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WEEKLY_WORKING_HOURS]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_33}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_34} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WORKING_SHIFT]}")
        if data[C.WORKING_SHIFT_DESCRIPTION] == EMPTY_STRING:
            pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
            pdf.write(h=0, txt=f"{FTC.label_35} ")
            pdf.set_font(NOTO_SANS, BOLD, 12)
            pdf.write(h=0, txt=f"{data[C.WORKING_TIME_START]} {DASH} {data[C.WORKING_TIME_END]}{DOT}")
        else:
            pdf.write(h=0, txt=f"{COLON} {data[C.WORKING_SHIFT_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_36}")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_37} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.WEEKLY_TIME_OFF]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_38} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.VACATION]} {data[C.VACATION_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_39}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        label_40 = PTC.label_40.replace("\n", " ")
        pdf.write(h=0, txt=f"{label_40}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_41}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_42} ")
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_43} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_TERMINATION_EMPLOYER]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_44} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.CONTRACT_TERMINATION_EMPLOYEE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {FTC.label_45}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_46}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{data[C.RIGHTS_AND_OBLIGATIONS]}{DOT}", align=ALIGN_CENTER)
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{FTC.label_47}", align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_48} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[C.COURT]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_49} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        if data[C.CONTRACT_STARTING_WITH] == EMPTY_STRING and data[C.CONTRACT_START_WITH_DESCRIPTION] != EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.CONTRACT_START_WITH_DESCRIPTION]}")
        elif data[C.CONTRACT_STARTING_WITH] != EMPTY_STRING and data[C.CONTRACT_START_WITH_DESCRIPTION] == EMPTY_STRING:
            pdf.write(h=0, txt=f"{data[C.CONTRACT_STARTING_WITH]}")
        else:
            pdf.write(h=0, txt=f"{data[C.CONTRACT_STARTING_WITH]} {data[C.CONTRACT_START_WITH_DESCRIPTION]}{DOT}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.ln()
        pdf.write(h=0, txt=f"{FTC.label_50}")
        pdf.ln(30)
        employer: str = f"{EMPLOYER}{COLON} {data[C.DIRECTOR]}"
        employee: str = f"{EMPLOYEE}{COLON} {data[C.EMPLOYEES]}"
        pdf.cell(w=0, h=0, txt=employer, align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=employee, align=ALIGN_RIGHT)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employer))}", align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employee))}", align=ALIGN_RIGHT)

        output: str = replace_character(
            f"{nameof(FTC)}{DOWN_DASH}{data[C.EMPLOYERS].upper()}{DOWN_DASH}{data[C.EMPLOYEES].upper()}{PDF_EXTENSION}"
        )
        pdf.output(output)

    def generate_anex_for_a1(data: Dict) -> None:
        pdf: PDFContractAnexA1 = PDFContractAnexA1(orientation=PORTRAIT, format=A4)
        pdf.alias_nb_pages()
        pdf.add_page()

        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.EMPLOYER]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {A1.label_1} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.EMPLOYER_DIRECTOR]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {A1.label_2} {A1.label_3} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.EMPLOYEE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f", {PERSONAL_ID_TYPES}{COLON} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.EMPLOYEE_PERSONAL_ID]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f", {A1.label_4}")
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.cell(w=0, h=0, txt=f"{A1.label_5}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.cell(w=0, h=0, txt=f"{A1.label_6}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_7}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_8}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_9} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.CONTRACT_DATE]} ")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{A1.label_10}")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.CONTRACT_TYPE]}{DOT}")
        pdf.ln()
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{A1.label_11} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.ANEX_END_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{A1.label_12}")
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_13}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_14}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_15} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.WORKING_PLACE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{A1.label_16_1} {A1.label_16_2}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_17}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_18_1} {A1.label_18_2}")
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_19} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.JOB_DESCRIPTION]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f"{A1.label_20_1} {A1.label_20_2} {A1.label_20_3}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_21}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_22}")
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_23}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_24}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_25_1} {A1.label_25_2}")
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_26}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_27}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_28}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_29}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_30_1} {A1.label_30_2} {A1.label_30_3}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_31}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_32_1} {A1.label_32_2}")
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_33_1} {A1.label_33_2}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_34}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_35}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_36}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_37_1} {A1.label_37_2}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_38}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_39}")
        pdf.ln()
        pdf.ln()
        pdf.cell(w=0, h=0, txt=f"{A1.label_40}", border=0, ln=0, align=ALIGN_CENTER)
        pdf.ln()
        pdf.ln()
        pdf.write(h=0, txt=f"{A1.label_41_1} {A1.label_41_2}")
        pdf.ln(10)
        pdf.write(h=0, txt=f"{A1.label_42} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.SIGNATURE_PLACE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {A1.label_43} ")
        pdf.set_font(NOTO_SANS, BOLD, 12)
        pdf.write(h=0, txt=f"{data[A1P.SIGNATURE_DATE]}")
        pdf.set_font(NOTO_SANS, EMPTY_STRING, 12)
        pdf.write(h=0, txt=f" {A1.label_44}")
        pdf.ln(20)

        employer: str = f"{A1.label_45}{COLON} {data[A1P.EMPLOYER_DIRECTOR]}"
        employee: str = f"{A1. label_46}{COLON} {data[A1P.EMPLOYEE]}"
        pdf.cell(w=0, h=0, txt=employer, align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=employee, align=ALIGN_RIGHT)
        pdf.ln(20)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employer))}", align=ALIGN_LEFT)
        pdf.cell(w=0, h=0, txt=f"{create_line(len(employee))}", align=ALIGN_RIGHT)

        output: str = replace_character(
            f"{nameof(A1)}{DOWN_DASH}{data[A1P.EMPLOYER].upper()}{DOWN_DASH}{data[A1P.EMPLOYEE].upper()}{PDF_EXTENSION}"
        )
        pdf.output(output)

    @staticmethod
    def generate_working_hours_sheet(data: Dict) -> None:
        locale.setlocale(locale.LC_ALL, LOCALE_CROATIA)
        employer: Employer = DatabaseHandler.get_employer_from_employer_name(data[Sheet.EMPLOYER])
        employee: Employee = DatabaseHandler.get_employee_from_personal_id(
            parse_personal_id_from_string(data[Sheet.EMPLOYEE])
        )
        pdf: PDFWorkingHoursSheet = PDFWorkingHoursSheet(
            employer, employee, data[Sheet.MONTH], data[Sheet.YEAR], orientation=LANDSCAPE, format=A4
        )
        pdf.alias_nb_pages()
        pdf.add_page()

        pdf.set_margin(11)
        cal = calendar.Calendar(calendar.MONDAY)

        pdf.set_font(NOTO_SANS, BOLD, 8)
        for index, item in enumerate(SHEET_DATA):
            if index == 1:
                pdf.cell(w=19, h=None, txt=item, border=True, align=ALIGN_CENTER)
            else:
                pdf.cell(w=16, h=None, txt=item, border=True, align=ALIGN_CENTER)

        dates: List = remove_unnecesary_dates_from_calendar(
            cal.itermonthdays4(int(data[Sheet.YEAR]), int(data[Sheet.MONTH])), int(data[Sheet.MONTH])
        )
        pdf.ln()
        size = 4.5
        for date in dates:
            pdf.cell(w=16, h=size, txt=create_date(date), border=True, align=ALIGN_CENTER)
            pdf.cell(w=19, h=size, txt=calendar.day_name[date[3]], border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.cell(w=16, h=size, txt=SPACE, border=True)
            pdf.ln()

        output: str = replace_character(
            f"{WHS}{DOWN_DASH}{data[Sheet.EMPLOYER].upper()}{DOWN_DASH}{data[Sheet.EMPLOYEE].upper()}{DOWN_DASH}{str(data[Sheet.MONTH]).upper()}{DOWN_DASH}{str(data[Sheet.YEAR]).upper()}{PDF_EXTENSION}"
        )
        pdf.output(output)
